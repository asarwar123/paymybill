// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using paymybill.web.app.Models;

namespace paymybill.web.app.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190831112655_again")]
    partial class again
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("paymybill.web.app.Models.BillCompanies", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("id");

                    b.ToTable("BillCompanies");
                });

            modelBuilder.Entity("paymybill.web.app.Models.BillTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("id");

                    b.ToTable("BillTypes");
                });

            modelBuilder.Entity("paymybill.web.app.Models.Consumers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Name");

                    b.Property<string>("email");

                    b.HasKey("id");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("paymybill.web.app.Models.RegisteredBills", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillNick");

                    b.Property<int>("CompanyId");

                    b.Property<string>("ConsumerId")
                        .HasMaxLength(11);

                    b.Property<int?>("Consumersid");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired();

                    b.Property<int>("TypeId");

                    b.Property<bool>("isActive");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Consumersid");

                    b.HasIndex("TypeId");

                    b.ToTable("RegisteredBills");
                });

            modelBuilder.Entity("paymybill.web.app.Models.RegisteredBills", b =>
                {
                    b.HasOne("paymybill.web.app.Models.BillCompanies", "BillCompanies")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("paymybill.web.app.Models.Consumers", "Consumers")
                        .WithMany()
                        .HasForeignKey("Consumersid");

                    b.HasOne("paymybill.web.app.Models.BillTypes", "BillTypes")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
